name: LinkedIn Auto Poster

on:
  schedule:
    - cron: '0 */6 * * *'  # Runs every 6 hours
  workflow_dispatch:  # Allows manual trigger
    inputs:
      debug-enabled:
        description: 'Run in debug mode'
        required: false
        default: false
        type: boolean

jobs:
  post:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Set maximum job runtime

    env:
      PYTHONUNBUFFERED: 1
      HEADLESS: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'  # Enables caching of pip dependencies
        
    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
      
    - name: Get Chrome version
      run: chrome --version
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify dependencies
      run: |
        python -c "import selenium; print(f'Selenium version: {selenium.__version__}')"
        python -c "import openai; print(f'OpenAI version: {openai.__version__}')"
        python -c "import requests; print(f'Requests version: {requests.__version__}')"
        
    - name: Create log directory
      run: mkdir -p logs
        
    - name: Run LinkedIn poster
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
        LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
        DEBUG: ${{ inputs.debug-enabled }}
      run: |
        python linkedin-autopost.py 2>&1 | tee logs/execution.log  # Changed the script name here
        
    - name: Check for script success
      run: |
        if [ ! -f logs/execution.log ]; then
          echo "Error: Execution log not found"
          exit 1
        fi
        if grep -i "error\|exception\|failed" logs/execution.log; then
          echo "Error: Found errors in execution log"
          exit 1
        fi
      
    - name: Upload logs on success
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: execution-logs-success
        path: logs/
        retention-days: 5
        
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: execution-logs-failure
        path: |
          logs/
          *.png  # Screenshot captures if any
        retention-days: 7
          
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '⚠️ LinkedIn Auto Poster Failed',
            body: `
            ## LinkedIn Auto Poster Failure Report
            
            - **Time**: ${new Date().toISOString()}
            - **Run ID**: ${context.runId}
            - **Workflow**: ${context.workflow}
            
            ### Action Details
            - [View Run Details](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            - Check the uploaded artifacts for detailed logs
            
            Please investigate the failure and take necessary action.
            `
          });
          
          // Add labels to the issue
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.data.number,
            labels: ['bot-failure', 'automation']
          });

    - name: Cleanup
      if: always()
      run: |
        rm -rf logs/
        rm -f *.png

concurrency:
  group: linkedin-poster
  cancel-in-progress: false  # Don't cancel already running jobs
